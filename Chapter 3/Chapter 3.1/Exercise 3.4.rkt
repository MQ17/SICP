#lang racket

(define (make-account balance password)
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount password)
    (set! balance (+ balance amount))
    balance)
  (let ((wrong-accesses 0))
    (define (dispatch given-password m)
      (cond ((not (eq? password given-password))
             (set! wrong-accesses (+ wrong-accesses 1))
             (if (= wrong-accesses 7)
                 (lambda (x) "calling the cops")
                 (lambda (x) "wrong password")))
            ((eq? m 'withdraw) (set! wrong-accesses 0) withdraw)
            ((eq? m 'deposit) (set! wrong-accesses 0) deposit)
            (else (error "Unknown request -- MAKE-ACCOUNT"
                         m))))
  dispatch))

(define acc (make-account 100 'secret-password))
((acc 'wrong-password 'withdraw) 40)
((acc 'secret-password 'withdraw) 40)
((acc 'wrong-password 'withdraw) 40)
((acc 'wrong-password 'withdraw) 40)
((acc 'wrong-password 'withdraw) 40)
((acc 'wrong-password 'withdraw) 40)
((acc 'wrong-password 'withdraw) 40)
((acc 'wrong-password 'withdraw) 40)
((acc 'wrong-password 'withdraw) 40)

  