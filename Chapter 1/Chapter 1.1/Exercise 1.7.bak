#lang sicp

;;; Exercise 1.7
(define (square x) (* x x))

(define (sqrt-iter guess x)
  (if (good-enough? guess x)
      guess
      (sqrt-iter (improve guess x)
                 x)))

(define (improve guess x)
  (average guess (/ x guess)))

(define (average x y)
  (/ (+ x y) 2))

(define (good-enough? guess x)
  (< (abs (- (square guess) x)) 0.001))

(define (sqrt x)
  (sqrt-iter 1.0 x))

;; 2ex + e^2 < 0.001
;; answers close to 0 have larger error while answers far away have very small error and may never terminate
(sqrt 0.0001)
(sqrt 0.01)
(sqrt 1)
(sqrt 100)